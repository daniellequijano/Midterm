####################SW1###################################################
##Task1
dat = read.csv('Desktop/mtsw_data.csv')
dat
x<-ifelse(dat$Ozone>25&dat$Temp>70,dat$Wind,NA)
mean(x,na.rm=TRUE)

##Task2
dat = read.csv('Desktop/mtsw_data.csv')
dat
y=0
for (row in 1:nrow(dat)){
  y[row]<-ifelse(dat[row,5]==9&dat[row,6]==8,dat[row,4],NA)
}
mean(y,na.rm=TRUE)

##Task3
dat = read.csv('Desktop/mtsw_data.csv')
dat
w<-0
positive<-complete.cases(dat)
w<-dat[positive,]
num<-dat[1,1]
i<-2
k<-0
while(i<=nrow(w)){
  if(num>w[i,1]&&w[i,5]==5){
    num<-w[i,1]
  }
  if(w[i,5]==6){
    if(k==0){
      k<-k+1
      num2<-dat[i,1]
    }
    else{
      if(is.na(num2)){
        num2<-w[i,1]
      }
      else if(num2>w[i,1]){
        num2<-w[i,1]
        cat("Month=5: ",num)
        cat("Month=6: ",num2)
      }
    }
  }
}
 cat("Month=5: ",num)
 cat("Month=6: ",num2)
 
 

 
 dat = read.csv('Desktop/mtsw_data.csv')
 dat
 w<-0
 positive<-complete.cases(dat)
 w<-dat[positive,]
 num<-dat[1,1]
 i<-2
 k<-0
 while(i<=nrow(w)){
   if(num>w[i,1]&&w[i,7]==7){
     num<-w[i,1]
   }
   if(w[i,7]==8){
     if(k==0){
       k<-k+1
       num2<-dat[i,1]
     }
     else{
       if(is.na(num2)){
         num2<-w[i,1]
       }
       else if(num2>w[i,1]){
         num2<-w[i,1]
       }
     }
     i<- i+1
   }
 }
 cat("Month=7: ",num)
 cat("Month=8: ",num2)
 
##Task4
 
 #1
 
 dat = read.csv('Desktop/mtsw_data.csv')
 dat
 
 rw<-1
 repeat{
 x[rw]<-ifelse(dat[rw,1]>25&dat[rw,4]>70,dat[rw,3],NA)
 if(rw==nrow(dat)){
   break;
 }
 rw<-rw+1
}
mean(x,na.rm=TRUE)
 
 #2
 
dat = read.csv('Desktop/mtsw_data.csv')
dat

rw<-1
repeat{
  x[rw]<-ifelse(dat[rw,5]==9&dat[rw,6]==8,dat[rw,4],NA)
  if(rw==nrow(dat)){
    break;
  }
  rw<-rw+1
}
mean(x,na.rm=TRUE)
 
####################SW2###################################################
##task1

data <- read.csv('mtsw_data.csv')


meanfun1 <- function(dat, min,max) {
  x<-ifelse(dat$Ozone>min & dat$Temp>max,dat$Wind,NA)
mean(x,na.rm=TRUE)
}

##TASK2
data <- read.csv('mtsw_data.csv')

meanfun2 <- function(dat,Month, Day) {
  y=0
  for (row in 1:nrow(dat)){
    y[row]<-ifelse(dat[row,5]==Month&dat[row,6]==Day,dat[row,4],NA)
  }
  mean(y,na.rm=TRUE)
}

#task3

data <- read.csv('mtsw_data.csv')

meanfun3 <- function(dat, Month) {
  y=0
  for (row in 1:nrow(dat)){
    y[row]<-ifelse(dat[row,5]==Month,dat[row,1],NA)
  }
  min(y,na.rm=TRUE)
}


####################SW3###################################################

#task1
#What is the value of Wind in the 112th row? Temp in the 42th row? Solar.R in the 82th row?

data <- read.csv('mtsw_data.csv')

fun1<- function(dat, row, col){
  dat[row,col]
}
  


#task2
#How many total missing values are in the columns of this data frame? For Ozone? For Solar.R? For Wind? For Temp

data <- read.csv('mtsw_data.csv')




fun2 <- function(data, v){
    if(v=='Ozone'||v=='Temp'||v=='Solar.R'||v=='Wind'){
      z <- data[ ,v]
      x <- sum(is.na(z))
      x
    }
  else{
    print("NO answer")
  }
}


#task3
#11.1 What is the mean for the 20th row - 70th row in Ozone column in this dataset? Exclude missing values (coded as NA) from this calculation.

fun3 <- function(data, x, y, v){
  if(v=='Ozone'||v=='Temp'||v=='Solar.R'||v=='Wind'){
    row_name <- data[x:y, v]
    mean(row_name, na.rm= TRUE)
  
  }
  else{
    print("NO answer")
  }
}
fun1(data, 82, "Wind")
fun2(data, "Ozone")
fun3(data, 20, 70, 'Wind')

####################SW4###################################################


library(EBImage)
library(magick)
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
library("EBImage")

#LOCALLY
img <- readImage("sak.jpg")
dim(x)[1:2]
y <- resize(img, w =250, h=300)
display(y)
z <- imageData(y)
dim(y)

#WEB
img2 <- image_read("https://d384u2mq2suvbq.cloudfront.net/public/spree/products/1597/jumbo/Japanese-Cherry-Blossom-Fragrance-Oil.jpg?1529607178")
a <- image_resize(img2, "x250")
a

####################SW5###################################################
library(magick)
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
library("EBImage")
library(EBImage)

##getting image from local files
setwd("C:/Users/RM A-225/Desktop/augmented-images")
img <- readImage("byakuya.jpg")
resize1 <- function(img, x1, x2){
  y <- resize(img, w =x1, h=x2)
  display(y)
  dim(y)
  plot(y)
}

grayscale1 <- function(img, x1){
  if(x1== TRUE){
  colorMode(img) = Grayscale
  display(img, all=TRUE)
  }
  else if(x1 == FALSE){
    colorMode(img) = Color
    display(img, all=TRUE)
  }
  else{
    print("Input should only be TRUE or FALSE")
  }
}
grayscale1(img, TRUE)

invert1 <- function(img, x1){
  Imagetr <- translate(rotate(img, x1), c(50, 0))
  display(Imagetr)
}
invert1(img, 90)

##getting image from web
img2 <- image_read('https://vignette.wikia.nocookie.net/poohadventures/images/f/f9/2972860-ishida-uryu-ishida-30477510-619-800.jpg/revision/latest?cb=20150307214912')
img2

resize2 <- function(img2, x1){
  a <- image_resize(img2, x1)
  a
}
resize2(img2, 500)

grayscale2 <- function(img2, x1){
  if(x1== TRUE){
    image_convert(img2,type = 'Grayscale')
  }
  else if(x1 == FALSE){
   img2
  }
  else{
    print("Input should only be TRUE or FALSE")
  }
}
grayscale2(img2, 2)

invert2 <- function(img2, x1){
  image_rotate(img2, x1)
}
invert2(img2, 90)




